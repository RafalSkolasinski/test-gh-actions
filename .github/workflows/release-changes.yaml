name: Prepare release changes

on:
  workflow_dispatch:

env:
  GITHUB_USER: morda-bot

jobs:
  release-changes:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Git Commit
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.name "${GITHUB_USER}"
          git config --global user.email "${GITHUB_USER}@users.noreply.github.com"

      - name: Set default docker tag for builds from master
        id: generate-uuid
        run: |
          apt-get update && apt-get install --yes uuid-runtime
          UUID=$(uuidgen)
          echo ::set-output name=uuid::${UUID}

      - name: Echo UUID that will be used
        run: |
          echo "Generated UUID is ${{ steps.generate-uuid.outputs.uuid }}"

      - name: Show git remotes
        run: |
          git remote -v

      - name: Create new branch with changes
        working-directory: release
        run: |
          git checkout -b ${{ steps.generate-uuid.outputs.uuid }}
          sudo make deps && make changes
          git add . && git commit -m "Commiting changes for ${{ steps.generate-uuid.outputs.uuid }}"
          git push --set-upstream origin ${{ steps.generate-uuid.outputs.uuid }}
        env:
          FORTUNE_ID: ${{ steps.generate-uuid.outputs.uuid }}

      - name: Open and merge PR with changes
        run: |
          gh pr create \
            --base master \
            --head ${{ steps.generate-uuid.outputs.uuid }} \
            --title "PR for ${{ steps.generate-uuid.outputs.uuid }}" \
            --body "update for ${{ steps.generate-uuid.outputs.uuid }}"
          gh pr merge --delete-branch --squash ${{ steps.generate-uuid.outputs.uuid }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
