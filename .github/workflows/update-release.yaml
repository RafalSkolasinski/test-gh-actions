name: Auto Draft new release

on:
  push:
    branches:
      - 'release-v*'


env:
  GITHUB_USER: morda-bot

jobs:
  update-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Git Commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "${GITHUB_USER}"
          git config --global user.email "${GITHUB_USER}@users.noreply.github.com"


      - name: Read release version from branch name
        id: release-tag
        run: |
          TAG=$(echo ${GITHUB_REF#refs/heads/release-v})
          echo "$TAG"
          echo ::set-output name=value::${TAG}

      - name: Configure node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install auto-changelog tool
        run: |
          npm install -g auto-changelog

      - name: Generate and commit changelog
        run: |
          git commit -m "Generating changelog for $TAG" --allow-empty
          git tag "${TAG}" --force && auto-changelog -l 5
          git add CHANGELOG.md && git commit --amend --no-edit && git tag "${TAG}" --force
          git push && git push origin ${TAG} --force
        env:
          TAG: "${{ steps.release-tag.outputs.value }}"

      - name: Generate release notes
        run: |
          auto-changelog --starting-version ${TAG} --ending-version ${TAG} -l 5 -o release-notes.txt
        env:
          TAG: "${{ steps.release-tag.outputs.value }}"

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: release-notes
      #     path: release-notes.txt

  # prepare-artifacts:
  #   runs-on: ubuntu-latest
  #   needs: prepare-release
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: release-notes

      - name: Prepare release artifact
        working-directory: release
        run: make package

  # draft-release:
  #   runs-on: ubuntu-latest
  #   needs: prepare-release
  #   steps:
  #     - name: Checkout Git Commit
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0


      - name: Create or edit release draft
        run: |
          gh release view "${TAG}" || gh release create "${TAG}" --title "${TAG}" --draft --notes ""
          sleep 5    # sleep required if we created a new draft -> otherwise release may not be found
          gh release edit "${TAG}" --notes-file release-notes.txt
          gh release upload "${TAG}" release/fortunes.tgz --clobber
        env:
          TAG: "${{ steps.release-tag.outputs.value }}"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
